import fileSystem from "node:fs";
import {urlToRequest} from "loader-utils";

interface LoaderContextType {
    resourcePath: string;
}

function getIsNonEmptyString(line: string): line is string {
    return line.trim() !== "";
}

function makeTypingLine(line: string): string {
    if (!/export var\s+\S+?\s*=\s*\S+?;/u.test(line)) {
        return "";
    }

    const exportKey: string = line.replace("export var ", "").split("=").at(0)?.trim() ?? "";

    if (exportKey === "") {
        return "";
    }

    return `    '${exportKey}': string;`;
}

function makeTypingContent(typingLineList: Array<string>): string {
    return `// Do not change. This file is automatically generated.
interface CssExport {
${typingLineList.join("\n")}
}
export const cssExport: CssExport;
export default cssExport;
`;
}

function writeFileCallback(error: NodeJS.ErrnoException | null): undefined {
    if (error) {
        console.error(error);
    }
}

export default function makeTyping(this: LoaderContextType, source: string): string {
    const pathToNewFile = `${urlToRequest(this.resourcePath)}.d.ts`;

    const exportList: Array<string> = source
        .split("\n")
        .map<string>(makeTypingLine)
        .filter<string>(getIsNonEmptyString);

    fileSystem.writeFile(
        pathToNewFile,
        makeTypingContent(exportList),
        {
            encoding: "utf8",
            flag: "w+",
        },
        writeFileCallback
    );

    return source;
}
